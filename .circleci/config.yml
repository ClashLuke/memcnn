version: 2.1
aliases:
  - &container_python
    docker:
      - image: circleci/python:3.6.4  # primary container for the build job

  - &run_task_install_tox_dependencies
    run:
      name: install tox dependencies
      command: |
        sudo printf "deb http://archive.debian.org/debian/ jessie main\ndeb-src http://archive.debian.org/debian/ jessie main\ndeb http://security.debian.org jessie/updates main\ndeb-src http://security.debian.org jessie/updates main" | sudo tee /etc/apt/sources.list
        sudo apt-get update
        sudo apt install -y build-essential libssl-dev libpython-dev python python-pip
        sudo apt-get remove python-pip
        sudo easy_install pip
        sudo ln -s /usr/local/bin/pip /usr/bin/pip
        sudo -H pip install --upgrade pip tox virtualenv

orbs:
  codecov: codecov/codecov@1.0.4
jobs:
  testing:
    parameters:
      tests:
        type: string
        default: py27-torch04,py27-torch10,py27-torch11,py36-torch04,py36-torch10,py36-torch11
    <<: *container_python
    steps:
      - checkout
      - *run_task_install_tox_dependencies
      - run:
          name: execute pytests << parameters.tests >>
          command: |
            mkdir test-reports
            tox -e << parameters.tests >>
      - codecov/upload:
          flags: backend,unittest
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: test-reports
      - codecov/upload:
          file: coverage/*.json
          flags: frontend
  builddocs:
    <<: *container_python
    steps:
      - checkout
      - *run_task_install_tox_dependencies
      - run:
          name: build the sphinx documentation
          command: |
            tox -e docs
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install pylint doc8 coverage codecov twine
            pip install -e .
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = Sil" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: createpackages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
      - run:
          name: trigger docker hub master branch build
          command: |
            curl -H "Content-Type: application/json" --data '{"source_type": "Branch", "source_name": "master"}' -X POST https://cloud.docker.com/api/build/v1/source/6b9cd8c1-33cc-49fc-b313-7819ad9645e1/trigger/a08ae490-83cf-4d9a-9f4d-7cc38a281ce0/call/
      - run:
          name: trigger docker hub latest tag build
          command: |
            curl -H "Content-Type: application/json" --data '{"source_type": "Tag", "source_name": "'"$CIRCLE_TAG"'"}' -X POST https://cloud.docker.com/api/build/v1/source/6b9cd8c1-33cc-49fc-b313-7819ad9645e1/trigger/a08ae490-83cf-4d9a-9f4d-7cc38a281ce0/call/

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - testing:
          name: testing_py27_torch04
          tests: py27-torch04
          filters:
            tags:
              only: /.*/
      - testing:
          name: testing_py27_torch10
          tests: py27-torch10
          filters:
            tags:
              only: /.*/
      - testing:
          name: testing_py27_torch11
          tests: py27-torch11
          filters:
            tags:
              only: /.*/
      - testing:
          name: testing_py36_torch04
          tests: py36-torch04
          filters:
            tags:
              only: /.*/
      - testing:
          name: testing_py36_torch10
          tests: py36-torch10
          filters:
            tags:
              only: /.*/
      - testing:
          name: testing_py36_torch11
          tests: py36-torch11
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - testing_py27_torch04
            - testing_py27_torch10
            - testing_py27_torch11
            - testing_py36_torch04
            - testing_py36_torch10
            - testing_py36_torch11
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
